// Original callback-based code
function simulateAsync(callback) {
    setTimeout(function() {
        callback(null, 'Success');
    }, 1000);
}

// Refactored code using Promises
function simulateAsync() {
    return new Promise(function(resolve, reject) {
        setTimeout(function() {
            resolve('Success');
        }, 1000);
    });
}

// Calling the function using Promise syntax
simulateAsync()
    .then(function(result) {
        console.log('Result:', result);
    })
    .catch(function(error) {
        console.error('Error:', error);
    });
